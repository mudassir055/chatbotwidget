name: Deploy Chatbot Widget to GitHub Pages

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: "."

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Comment deployment URL
        if: github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentUrl = '${{ steps.deployment.outputs.page_url }}';
            const widgetUrl = `${deploymentUrl}embed.js`;

            const comment = `ðŸš€ **Deployment Successful!**

            Your chatbot widget is now available at:
            \`\`\`
            ${widgetUrl}
            \`\`\`

            **Integration code:**
            \`\`\`html
            <script>
                window.ChatbotConfig = {
                    webhookUrl: 'https://your-webhook-endpoint.com/webhook',
                    title: 'Support Assistant'
                };
            </script>
            <script src="${widgetUrl}"></script>
            \`\`\`

            **Demo:** [${deploymentUrl}demo.html](${deploymentUrl}demo.html)
            **Test Page:** [${deploymentUrl}quick-integration.html](${deploymentUrl}quick-integration.html)`;

            // Create a commit comment
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: comment
            });
